@model SofthemeClassBooking.Models.FeedbackModel

@section stylesUp {
    @Styles.Render("~/Styles/feedback.css")
}

<link rel="stylesheet" href="~/Content/css/feedback.css" />

<div class="feedback">
    <div class="feedback-container">
        <div class="feedback-header">
            <div class="feedback-write-message"><h2>Написать сообщение</h2></div>
            <div id="result-message" class="feedback-result-message">&nbsp;</div>
        </div>
        <!--<h2>Написать сообщение</h2>-->
        
        <div>
            <div class="feedback-left">
                <div class="feedback-proposition-text">Напишите, если у вас есть идеи, предложения, замечания или вопросы.</div>
                <div class="feedback-image"></div>
            </div>

            <div class="feedback-form"> 
                
                @using (Html.BeginForm("Send", "Feedback", FormMethod.Post, new { role = "form", id = "feedback", autocomplete = "off" }))
                {
                    @Html.AntiForgeryToken()

                    <div>
                        <div class="feedback-form-inline-name">
                            <div class="feedback-form-incorrect-block">
                                @Html.ValidationMessageFor(m => m.Name, "", new { @class = "feedback-form-incorrect-with-image" })
                            </div>
                            @Html.TextBoxFor(m => m.Name, new { id = "firstName", placeholder = "Имя", @class = "feedback-form-name" })
                        </div>
                        <div class="feedback-form-inline-lastname">
                            <div class="feedback-form-incorrect-block">
                                @Html.ValidationMessageFor(m => m.Surname, "", new { @class = "feedback-form-incorrect-with-image" })
                            </div>
                            @Html.TextBoxFor(m => m.Surname, new { id = "lastName", placeholder = "Фамилия", @class = "feedback-form-lastname" })
                        </div>
                    </div>

                    <div class="feedback-form-incorrect-block">
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "feedback-form-incorrect-with-image" })
                    </div>
                    <div class="feedback-form-email-block">
                        @Html.TextBoxFor(m => m.Email, new { id = "email", placeholder = "Адрес электронной почты", @class = "feedback-form-email" })
                    </div>

                    <div class="feedback-form-incorrect-block">
                        @Html.ValidationMessageFor(m => m.Text, "", new { @class = "feedback-form-incorrect-with-image" })
                    </div>
                    <div>
                        @Html.TextAreaFor(m => m.Text, new { id = "message", @class = "feedback-form-message" })
                    </div>

                    <div class="feedback-form-button-submit-block">
                        <button id="submit" type="submit" class="feedback-form-button-submit">Отправить</button>
                    </div>
                }

            </div>
        </div>

      
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript">
    $("#submit")
             .click(function (e) {
                 e.preventDefault();

                 if ($('#feedback').valid()) {
                     $.ajax({
                         url: '@Url.Action("Send")',
                         method: 'POST',
                         data: $('#feedback').serialize(),
                         dataType: 'json',
                         success: function (result) {
                             $('#result-message').html(result.message);
                             $("#feedback").trigger('reset');
                             $("#submit").toggleClass('feedback-form-button-submit-ok feedback-form-button-submit');
                         }
                     });
                 }
             });
</script>